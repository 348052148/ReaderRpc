// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protoc/ParserService.protoc

package srv

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//标注+类型+属性名+属性顺序号+[默认值]
type ChapterRequest struct {
	Link                 string   `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChapterRequest) Reset()         { *m = ChapterRequest{} }
func (m *ChapterRequest) String() string { return proto.CompactTextString(m) }
func (*ChapterRequest) ProtoMessage()    {}
func (*ChapterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f162124cde3fd4d1, []int{0}
}

func (m *ChapterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChapterRequest.Unmarshal(m, b)
}
func (m *ChapterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChapterRequest.Marshal(b, m, deterministic)
}
func (m *ChapterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChapterRequest.Merge(m, src)
}
func (m *ChapterRequest) XXX_Size() int {
	return xxx_messageInfo_ChapterRequest.Size(m)
}
func (m *ChapterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChapterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChapterRequest proto.InternalMessageInfo

func (m *ChapterRequest) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *ChapterRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type ChapterResponse struct {
	Chapters             []*ChapterResponse_Chapter `protobuf:"bytes,1,rep,name=chapters,proto3" json:"chapters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ChapterResponse) Reset()         { *m = ChapterResponse{} }
func (m *ChapterResponse) String() string { return proto.CompactTextString(m) }
func (*ChapterResponse) ProtoMessage()    {}
func (*ChapterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f162124cde3fd4d1, []int{1}
}

func (m *ChapterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChapterResponse.Unmarshal(m, b)
}
func (m *ChapterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChapterResponse.Marshal(b, m, deterministic)
}
func (m *ChapterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChapterResponse.Merge(m, src)
}
func (m *ChapterResponse) XXX_Size() int {
	return xxx_messageInfo_ChapterResponse.Size(m)
}
func (m *ChapterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChapterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChapterResponse proto.InternalMessageInfo

func (m *ChapterResponse) GetChapters() []*ChapterResponse_Chapter {
	if m != nil {
		return m.Chapters
	}
	return nil
}

type ChapterResponse_Chapter struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	ContentsLink         string   `protobuf:"bytes,3,opt,name=contentsLink,proto3" json:"contentsLink,omitempty"`
	Source               string   `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChapterResponse_Chapter) Reset()         { *m = ChapterResponse_Chapter{} }
func (m *ChapterResponse_Chapter) String() string { return proto.CompactTextString(m) }
func (*ChapterResponse_Chapter) ProtoMessage()    {}
func (*ChapterResponse_Chapter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f162124cde3fd4d1, []int{1, 0}
}

func (m *ChapterResponse_Chapter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChapterResponse_Chapter.Unmarshal(m, b)
}
func (m *ChapterResponse_Chapter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChapterResponse_Chapter.Marshal(b, m, deterministic)
}
func (m *ChapterResponse_Chapter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChapterResponse_Chapter.Merge(m, src)
}
func (m *ChapterResponse_Chapter) XXX_Size() int {
	return xxx_messageInfo_ChapterResponse_Chapter.Size(m)
}
func (m *ChapterResponse_Chapter) XXX_DiscardUnknown() {
	xxx_messageInfo_ChapterResponse_Chapter.DiscardUnknown(m)
}

var xxx_messageInfo_ChapterResponse_Chapter proto.InternalMessageInfo

func (m *ChapterResponse_Chapter) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ChapterResponse_Chapter) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ChapterResponse_Chapter) GetContentsLink() string {
	if m != nil {
		return m.ContentsLink
	}
	return ""
}

func (m *ChapterResponse_Chapter) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type ChapterContentRequest struct {
	Link                 string   `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChapterContentRequest) Reset()         { *m = ChapterContentRequest{} }
func (m *ChapterContentRequest) String() string { return proto.CompactTextString(m) }
func (*ChapterContentRequest) ProtoMessage()    {}
func (*ChapterContentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f162124cde3fd4d1, []int{2}
}

func (m *ChapterContentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChapterContentRequest.Unmarshal(m, b)
}
func (m *ChapterContentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChapterContentRequest.Marshal(b, m, deterministic)
}
func (m *ChapterContentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChapterContentRequest.Merge(m, src)
}
func (m *ChapterContentRequest) XXX_Size() int {
	return xxx_messageInfo_ChapterContentRequest.Size(m)
}
func (m *ChapterContentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChapterContentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChapterContentRequest proto.InternalMessageInfo

func (m *ChapterContentRequest) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *ChapterContentRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type ChapterContentResponse struct {
	Contents             string   `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChapterContentResponse) Reset()         { *m = ChapterContentResponse{} }
func (m *ChapterContentResponse) String() string { return proto.CompactTextString(m) }
func (*ChapterContentResponse) ProtoMessage()    {}
func (*ChapterContentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f162124cde3fd4d1, []int{3}
}

func (m *ChapterContentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChapterContentResponse.Unmarshal(m, b)
}
func (m *ChapterContentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChapterContentResponse.Marshal(b, m, deterministic)
}
func (m *ChapterContentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChapterContentResponse.Merge(m, src)
}
func (m *ChapterContentResponse) XXX_Size() int {
	return xxx_messageInfo_ChapterContentResponse.Size(m)
}
func (m *ChapterContentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChapterContentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChapterContentResponse proto.InternalMessageInfo

func (m *ChapterContentResponse) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func init() {
	proto.RegisterType((*ChapterRequest)(nil), "srv.ChapterRequest")
	proto.RegisterType((*ChapterResponse)(nil), "srv.ChapterResponse")
	proto.RegisterType((*ChapterResponse_Chapter)(nil), "srv.ChapterResponse.Chapter")
	proto.RegisterType((*ChapterContentRequest)(nil), "srv.ChapterContentRequest")
	proto.RegisterType((*ChapterContentResponse)(nil), "srv.ChapterContentResponse")
}

func init() { proto.RegisterFile("protoc/ParserService.protoc", fileDescriptor_f162124cde3fd4d1) }

var fileDescriptor_f162124cde3fd4d1 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xcb, 0x4e, 0xc3, 0x30,
	0x10, 0x24, 0xf4, 0x41, 0x59, 0xa0, 0x48, 0x4b, 0x5b, 0x45, 0x2e, 0x87, 0x2a, 0xa7, 0x9e, 0x82,
	0x54, 0x38, 0x70, 0x80, 0x53, 0xae, 0x1c, 0x50, 0xf8, 0x82, 0x62, 0x56, 0x22, 0xa2, 0xb2, 0x53,
	0xaf, 0x1b, 0xf1, 0x3d, 0x7c, 0x08, 0xdf, 0x86, 0x6a, 0xbb, 0x51, 0x5d, 0xf5, 0xc4, 0x2d, 0x33,
	0xd9, 0x19, 0xcf, 0x8e, 0x0d, 0xd3, 0xda, 0x68, 0xab, 0xe5, 0xdd, 0xeb, 0xd2, 0x30, 0x99, 0x37,
	0x32, 0x4d, 0x25, 0x29, 0xf7, 0x24, 0x76, 0xd8, 0x34, 0xd9, 0x13, 0x0c, 0x8b, 0xcf, 0x65, 0x6d,
	0xc9, 0x94, 0xb4, 0xde, 0x10, 0x5b, 0x44, 0xe8, 0xae, 0x2a, 0xf5, 0x95, 0x26, 0xb3, 0x64, 0x7e,
	0x5e, 0xba, 0x6f, 0x9c, 0x40, 0x9f, 0xf5, 0xc6, 0x48, 0x4a, 0x4f, 0x1d, 0x1b, 0x50, 0xf6, 0x9b,
	0xc0, 0x75, 0x2b, 0xe7, 0x5a, 0x2b, 0x26, 0x7c, 0x84, 0x81, 0xf4, 0x14, 0xa7, 0xc9, 0xac, 0x33,
	0xbf, 0x58, 0xdc, 0xe6, 0x6c, 0x9a, 0xfc, 0x60, 0xae, 0xc5, 0xed, 0xb4, 0x58, 0xc3, 0x59, 0x20,
	0x71, 0x04, 0x3d, 0x5b, 0xd9, 0x15, 0x85, 0x14, 0x1e, 0x6c, 0xd9, 0x4a, 0x7d, 0xd0, 0xb7, 0x4b,
	0xd1, 0x2b, 0x3d, 0xc0, 0x0c, 0x2e, 0xa5, 0x56, 0x96, 0x94, 0xe5, 0x97, 0x6d, 0xf0, 0x8e, 0x93,
	0x44, 0xdc, 0xde, 0x02, 0xdd, 0x68, 0x81, 0x02, 0xc6, 0xe1, 0xc8, 0xc2, 0x8f, 0xff, 0xa7, 0x85,
	0x07, 0x98, 0x1c, 0x9a, 0x84, 0x2e, 0x04, 0x0c, 0x76, 0x31, 0x82, 0x53, 0x8b, 0x17, 0x3f, 0x09,
	0x5c, 0x45, 0xf7, 0x82, 0xcf, 0x30, 0xf4, 0x44, 0x70, 0x63, 0xbc, 0x89, 0x9b, 0x73, 0xd1, 0xc4,
	0xe8, 0x58, 0x9d, 0xd9, 0x09, 0x96, 0x30, 0x8e, 0xe4, 0x21, 0x0c, 0xa3, 0xd8, 0x17, 0xc4, 0x7b,
	0x8a, 0xe9, 0xd1, 0x7f, 0x3b, 0xcf, 0xf7, 0xbe, 0x7b, 0x2b, 0xf7, 0x7f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xda, 0xa8, 0xc1, 0xa8, 0x49, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ParserServiceClient is the client API for ParserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ParserServiceClient interface {
	ParserChapters(ctx context.Context, in *ChapterRequest, opts ...grpc.CallOption) (*ChapterResponse, error)
	ParserChapterContents(ctx context.Context, in *ChapterContentRequest, opts ...grpc.CallOption) (*ChapterContentResponse, error)
}

type parserServiceClient struct {
	cc *grpc.ClientConn
}

func NewParserServiceClient(cc *grpc.ClientConn) ParserServiceClient {
	return &parserServiceClient{cc}
}

func (c *parserServiceClient) ParserChapters(ctx context.Context, in *ChapterRequest, opts ...grpc.CallOption) (*ChapterResponse, error) {
	out := new(ChapterResponse)
	err := c.cc.Invoke(ctx, "/srv.ParserService/ParserChapters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *parserServiceClient) ParserChapterContents(ctx context.Context, in *ChapterContentRequest, opts ...grpc.CallOption) (*ChapterContentResponse, error) {
	out := new(ChapterContentResponse)
	err := c.cc.Invoke(ctx, "/srv.ParserService/ParserChapterContents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ParserServiceServer is the server API for ParserService service.
type ParserServiceServer interface {
	ParserChapters(context.Context, *ChapterRequest) (*ChapterResponse, error)
	ParserChapterContents(context.Context, *ChapterContentRequest) (*ChapterContentResponse, error)
}

// UnimplementedParserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedParserServiceServer struct {
}

func (*UnimplementedParserServiceServer) ParserChapters(ctx context.Context, req *ChapterRequest) (*ChapterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ParserChapters not implemented")
}
func (*UnimplementedParserServiceServer) ParserChapterContents(ctx context.Context, req *ChapterContentRequest) (*ChapterContentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ParserChapterContents not implemented")
}

func RegisterParserServiceServer(s *grpc.Server, srv ParserServiceServer) {
	s.RegisterService(&_ParserService_serviceDesc, srv)
}

func _ParserService_ParserChapters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChapterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParserServiceServer).ParserChapters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/srv.ParserService/ParserChapters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParserServiceServer).ParserChapters(ctx, req.(*ChapterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ParserService_ParserChapterContents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChapterContentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParserServiceServer).ParserChapterContents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/srv.ParserService/ParserChapterContents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParserServiceServer).ParserChapterContents(ctx, req.(*ChapterContentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ParserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "srv.ParserService",
	HandlerType: (*ParserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ParserChapters",
			Handler:    _ParserService_ParserChapters_Handler,
		},
		{
			MethodName: "ParserChapterContents",
			Handler:    _ParserService_ParserChapterContents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protoc/ParserService.protoc",
}
